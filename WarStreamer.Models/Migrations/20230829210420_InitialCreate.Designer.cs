// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarStreamer.Models.Context;

#nullable disable

namespace WarStreamer.Models.Migrations
{
    [DbContext(typeof(WarStreamerContext))]
    [Migration("20230829210420_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WarStreamer.Models.Account", b =>
                {
                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("UserId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.HasKey("Tag");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WarStreamer.Models.Image", b =>
                {
                    b.Property<decimal>("OverlaySettingId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("LocationX")
                        .HasColumnType("int");

                    b.Property<int>("LocationY")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("OverlaySettingId", "Name");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("WarStreamer.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CultureInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagEmoji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortcutValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("WarStreamer.Models.OverlaySetting", b =>
                {
                    b.Property<decimal>("UserId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)")
                        .HasColumnName("Id");

                    b.Property<int?>("AverageDurationLocationX")
                        .HasColumnType("int");

                    b.Property<int?>("AverageDurationLocationY")
                        .HasColumnType("int");

                    b.Property<int?>("ClanNameLocationX")
                        .HasColumnType("int");

                    b.Property<int?>("ClanNameLocationY")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsAverageDuration")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClanName")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLogo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPlayerDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTotalPercentage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTotalStars")
                        .HasColumnType("bit");

                    b.Property<int?>("LogoLocationX")
                        .HasColumnType("int");

                    b.Property<int?>("LogoLocationY")
                        .HasColumnType("int");

                    b.Property<bool>("MirrorReflection")
                        .HasColumnType("bit");

                    b.Property<int?>("PlayerDetailsLocationX")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerDetailsLocationY")
                        .HasColumnType("int");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalPercentageLocationX")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPercentageLocationY")
                        .HasColumnType("int");

                    b.Property<int?>("TotalStarsLocationX")
                        .HasColumnType("int");

                    b.Property<int?>("TotalStarsLocationY")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("UserId");

                    b.ToTable("OverlaySettings");
                });

            modelBuilder.Entity("WarStreamer.Models.TeamLogo", b =>
                {
                    b.Property<string>("TeamName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("UserId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("TeamName", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamLogos");
                });

            modelBuilder.Entity("WarStreamer.Models.User", b =>
                {
                    b.Property<decimal>("Id")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<long>("TierLevel")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WarStreamer.Models.WarOverlay", b =>
                {
                    b.Property<decimal>("UserId")
                        .HasPrecision(30)
                        .HasColumnType("decimal(30,0)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ClanTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsEnded")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastCheckout")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("UserId", "Id");

                    b.ToTable("WarOverlays");
                });

            modelBuilder.Entity("WarStreamer.Models.Account", b =>
                {
                    b.HasOne("WarStreamer.Models.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WarStreamer.Models.Image", b =>
                {
                    b.HasOne("WarStreamer.Models.OverlaySetting", "OverlaySetting")
                        .WithMany("Images")
                        .HasForeignKey("OverlaySettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OverlaySetting");
                });

            modelBuilder.Entity("WarStreamer.Models.OverlaySetting", b =>
                {
                    b.HasOne("WarStreamer.Models.User", "User")
                        .WithOne("OverlaySetting")
                        .HasForeignKey("WarStreamer.Models.OverlaySetting", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WarStreamer.Models.TeamLogo", b =>
                {
                    b.HasOne("WarStreamer.Models.User", "User")
                        .WithMany("TeamLogos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WarStreamer.Models.User", b =>
                {
                    b.HasOne("WarStreamer.Models.Language", "Language")
                        .WithMany("Users")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("WarStreamer.Models.WarOverlay", b =>
                {
                    b.HasOne("WarStreamer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WarStreamer.Models.Language", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WarStreamer.Models.OverlaySetting", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("WarStreamer.Models.User", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("OverlaySetting");

                    b.Navigation("TeamLogos");
                });
#pragma warning restore 612, 618
        }
    }
}
